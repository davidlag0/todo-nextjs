{
  "name": "todo-nextjs",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "prepare": "husky install",
    "prettier-check": "prettier --check .",
    "test": "jest --coverage --testPathPattern='unit'",
    "test:watch": "jest --watch --testPathPattern='unit'",
    "test:e2e": "jest --testPathPattern='integration' --runInBand",
    "test:dependencies": "npm run build && npm run lint && npm run prettier-check && npm run test && npm run e2e:headless",
    "cypress": "cypress open",
    "cypress:headless": "cypress run",
    "e2e": "start-server-and-test start http://localhost:3000 cypress",
    "e2e:headless": "start-server-and-test start http://localhost:3000 'npm run database:reset && npm run cypress:headless && npm run test:e2e'",
    "database:reset": "cat ./postgresql/drop-tables.sql | podman exec -i postgres psql -U testuser -d testdb && npx prisma db push"
  },
  "dependencies": {
    "@prisma/client": "^3.12.0",
    "mobx": "^6.3.13",
    "net": "^1.0.2",
    "next": "^12.1.5",
    "next-auth": "^4.3.3",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-is": "17.0.2",
    "redoc": "^2.0.0-rc.63",
    "styled-components": "^5.3.3",
    "tls": "^0.0.1",
    "yaml-loader": "^0.6.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^16.1.0",
    "@commitlint/config-conventional": "^16.0.0",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^12.1.2",
    "@testing-library/user-event": "^14.0.4",
    "cypress": "^10.2.0",
    "eslint": "^8.14.0",
    "eslint-config-next": "^12.1.5",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-testing-library": "^5.3.1",
    "husky": "^7.0.4",
    "jest": "^27.4.7",
    "jest-fetch-mock": "^3.0.3",
    "jest-mock-extended": "^2.0.5",
    "jest-openapi": "^0.14.2",
    "node-mocks-http": "^1.11.0",
    "prettier": "^2.6.2",
    "prisma": "^3.12.0",
    "start-server-and-test": "^1.14.0"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
}
